//>>built
define("gridx/core/model/SyncCache",["dojo/_base/declare","dojo/_base/array","dojo/_base/lang","dojo/_base/Deferred","./_Cache"],function(_1,_2,_3,_4,_5){return _1("gridx.core.model.SyncCache",_5,{constructor:function(){this._init();},clear:function(){this._idMap={};this._indexMap=[];this._cache={};this.totalCount=-1;},byIndex:function(_6){this._init();return this._cache[this._indexMap[_6]];},byId:function(id){this._init();return this._cache[id];},indexToId:function(_7){this._init();return this._indexMap[_7];},idToIndex:function(id){this._init();return this._idMap[id];},size:function(){this._init();return this.totalCount;},when:function(_8,_9){this._init();var d=new _4();try{if(_9){_9();}d.callback();}catch(e){d.errback(e);}return d;},_init:function(){if(this.totalCount>=0){return;}this.onBeforeFetch();var _a=this,s=this.store,_b=_3.mixin({start:0},this.options||{});var _c=function(_d){var _e=_a.totalCount;_a.totalCount=parseInt(_d,10);if(_e!==_a.totalCount){_a.onSizeChange(_a.totalCount,_e);}};var _f=function(_10){_2.forEach(_10,_a._addRow,_a);_a.onAfterFetch();};var _11=function(e){_a.onAfterFetch();console.error(e);};if(s.fetch){s.fetch(_3.mixin(_b,{onBegin:_c,onComplete:_f,onError:_11}));}else{var _12=s.query(_b.query,_b);_4.when(_12.total,_c);_f(_12);}},_addRow:function(_13,idx){var id=this.store.getIdentity(_13);var _14=this._itemToObject(_13);this._idMap[id]=idx;this._indexMap[idx]=id;this._cache[id]={data:this._formatRow(_14),rawData:_14,item:_13};},_onNew:function(_15){if(this.totalCount<0){this._init();}else{this._addRow(_15,this.totalCount++);}var id=this.store.getIdentity(_15);this.onSizeChange(this.totalCount,this.totalCount-1);this.onNew(id,this.totalCount-1,this._cache[id]);},_onSet:function(_16){this._init();var id=this.store.getIdentity(_16),_17=this._idMap[id];this._addRow(_16,_17);this.onSet(id,_17,this._cache[id]);},_onDelete:function(_18){var id=this.store.fetch?this.store.getIdentity(_18):_18,idx=this._idMap[id],i;if(idx>=0){delete this._cache[id];delete this._idMap[id];this._indexMap.splice(idx,1);for(i=idx;i<this._indexMap.length;++i){this._idMap[this._indexMap[i]]=i;}--this.totalCount;this.onSizeChange(this.totalCount,this.totalCount+1);}this.onDelete(id,idx);}});});